$ErrorActionPreference = "stop"
$ProgressPreference = "silentlycontinue"

function _Export-PrintConfiguration {
param (
        $PrintDeviceCommonName
)

    $DateStamp  =   get-date -Format yyyyMMddhhmmss
    $DirLocal = "C:\RTSupport\Utilities\Printers\$($PrintDeviceCommonName)\$($DateStamp)"
    If (!(test-path $DirLocal)) {new-item $DirLocal -itemtype Directory -force}

    $Log = "$($DirLocal)\$($PrintDeviceCommonName)-PrintConfiguration.log"
    Start-Transcript $Log
    Write-Host ""
    Write-Host ""
    Write-Host ""

    $Prn = Get-Printer "*$($PrintDeviceCommonName)*"
    if ($Prn.Name.Count -lt 1) {
        Write-Host "Error locating printer with name $($PrintDeviceCommonName)"
    } elseif ($Prn.Name.Count -gt 1) {
        Write-Host "More than one printer found matching string. Narrow search and try again."
        Write-Host "Printer Search String:  $($PrintDeviceCommonName)"
        Write-Host ""
        Write-Host "Results:"
        $prn | foreach {Write-Host "$($_)"}
    } elseif ($Prn.Name.Count -eq 1) {
        $PrnDriver = Get-PrinterDriver -name $Prn.DriverName
        $PrnPort = Get-PrinterPort -name $Prn.PortName
        Write-Host "Print Device found:"
        Write-Host "Name:   $($Prn.Name)"
        Write-Host "Driver:   $($Prn.DriverName)"
        Write-Host "Port:   $($Prn.PortName)"
    }

    $PrnDriver = Get-PrinterDriver -name $Prn.DriverName
    $PrnPort = Get-PrinterPort -name $Prn.PortName

    $PrnDriver.InfPath
    $PrnInf = $PrnDriver.InfPath.split('\')[($PrnDriver.InfPath.split('\').count - 1)]
    $GciInf = gci "C:\Windows\System32" -Recurse -Filter $PrnInf -ea SilentlyContinue
    $GciInf.Name
    $GciInf.DirectoryName

    start-process robocopy -ArgumentList "$($GciInf.DirectoryName) $($DirLocal)\$($GciInf.Name) /E" -Wait -NoNewWindow -PassThru

    Stop-Transcript

    Write-Host "Export Complete:"
    Write-Host "Log file and .inf available at: $($DirLocal)"
} # _Export-PrintConfiguration

switch ($PrinterName)
{
    {$PrinterName -eq "ALL"} {
        get-printer | foreach {_Export-PrintConfiguration -PrintDeviceCommonName $_.Name}
        break;
    }
    {$PrinterName.count -eq 1} {
        _Export-PrintConfiguration -PrintDeviceCommonName $PrinterName
        break;
    }
    {$PrinterName.count -gt 1} {
        $PrinterName | foreach {_Export-PrintConfiguration -PrintDeviceCommonName $_}
        break;
    }
    default {
        read-host -prompt "Please enter a printer name to export:" | _export-PrintConfiguration -PrintDeviceCommonName $_
        break;
    }
}

